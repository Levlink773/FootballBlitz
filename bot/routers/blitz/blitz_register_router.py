import traceback

from aiogram import Router
from aiogram.types import CallbackQuery

from blitz.services.blitz_service import BlitzService
from blitz.exception import BlitzCloseError, CharacterExistsInBlitzError, BlitzDoesNotExistError, MaxUsersInBlitzError
from bot.callbacks.blitz_callback import BlitzRegisterCallback
from database.models.character import Character

blitz_register_router = Router()

@blitz_register_router.callback_query(BlitzRegisterCallback.filter())
async def blitz_register_filter(query: CallbackQuery,
                                callback_data: BlitzRegisterCallback,
                                character: Character,
                                ):
    try:
        await BlitzService.add_character_to_blitz(callback_data.blitz_id, character, callback_data.max_characters)
        text = "üéâ –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–ª–∏—Å—è –Ω–∞ –±–ª—ñ—Ü-—Ç—É—Ä–Ω—ñ—Ä! –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –≤ 15:00 —Ç–∞ –≥–æ—Ç—É–π—Ç–µ—Å—è –¥–æ –±–æ—Ä–æ—Ç—å–±–∏ ‚öΩÔ∏è"
        await query.answer(
            text,
            show_alert=True,
        )
        await query.message.delete()
        await query.message.answer(text)
    except BlitzCloseError as e:
        text = "‚åõÔ∏è –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –Ω–∞ –±–ª—ñ—Ü-—Ç—É—Ä–Ω—ñ—Ä –∑–∞–∫—Ä–∏—Ç–æ. –ß–µ–∫–∞–π—Ç–µ –∑–∞–≤—Ç—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –±–∏—Ç–≤–∏!"
        print(f"msg: {e}")
        await query.answer(text, show_alert=True)
        await query.message.delete()
    except CharacterExistsInBlitzError as e:
        print(f"msg: {e}")
        text = "üîî –í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ –Ω–∞ —Ü–µ–π –±–ª—ñ—Ü-—Ç—É—Ä–Ω—ñ—Ä. –ß–µ–∫–∞–π—Ç–µ –ø–æ—á–∞—Ç–∫—É —Ç—É—Ä–Ω—ñ—Ä—É!"
        await query.answer(text, show_alert=True)
        await query.message.delete()
        await query.message.answer(text)
    except MaxUsersInBlitzError as e:
        print(f"msg: {e}")
        text = (
            "‚ùå –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚Äî –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤ —É –±–ª—ñ—Ü-—Ç—É—Ä–Ω—ñ—Ä—ñ –≤–∂–µ –¥–æ—Å—è–≥–ª–∞ –º–∞–∫—Å–∏–º—É–º—É. \n\n"
            "üìå –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –∞–Ω–æ–Ω—Å–∞–º–∏ ‚Äî –Ω–æ–≤–∏–π —Ç—É—Ä–Ω—ñ—Ä –±—É–¥–µ –≤–∂–µ –∑–∞–≤—Ç—Ä–∞ –≤ 15:00 ‚öΩÔ∏è"
        )
        await query.answer(text, show_alert=True)
        await query.message.delete()
        await query.message.answer(text)
    except BlitzDoesNotExistError as e:
        print(f"msg: {e}")
        await query.answer(
            f"‚ùì –¢—É—Ä–Ω—ñ—Ä –∑ id {callback_data.blitz_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö.",
            show_alert=True,
        )
        await query.message.delete()
    except Exception as e:
        traceback.print_exc()
        print(f"msg: {e}")
        await query.answer(
            "‚ö†Ô∏è –£–ø—Å! –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –Ω–∞ –±–ª—ñ—Ü-—Ç—É—Ä–Ω—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.",
            show_alert=True,
        )
        await query.message.delete()
